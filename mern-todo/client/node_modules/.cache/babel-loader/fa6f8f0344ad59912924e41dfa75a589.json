{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sumaudupa/Desktop/office-data/sample_websites/mern-todo/client/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/sumaudupa/Desktop/office-data/sample_websites/mern-todo/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/sumaudupa/Desktop/office-data/sample_websites/mern-todo/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/sumaudupa/Desktop/office-data/sample_websites/mern-todo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sumaudupa/Desktop/office-data/sample_websites/mern-todo/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sumaudupa/Desktop/office-data/sample_websites/mern-todo/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sumaudupa/Desktop/office-data/sample_websites/mern-todo/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sumaudupa/Desktop/office-data/sample_websites/mern-todo/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/sumaudupa/Desktop/office-data/sample_websites/mern-todo/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/sumaudupa/Desktop/office-data/sample_websites/mern-todo/client/src/App.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID)\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($id: ID!, $complete: Boolean!) {\\n    updateTodo(id: $id, complete: $complete)\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    todos {\\n      id\\n      text\\n      complete\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from \"react-apollo\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nvar TodosQuery = gql(_templateObject());\nvar UpdateMutation = gql(_templateObject2());\nvar RemoveMutation = gql(_templateObject3());\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(todo) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.props.updateTodo({\n                  variables: {\n                    id: todo.id,\n                    complete: !todo.complete\n                  },\n                  update: function update(store) {\n                    //Read data from cache to query\n                    var data = store.readQuery({\n                      query: TodosQuery\n                    });\n                    data.todos = data.todos.map(function (task) {\n                      return task.id === todo.id ? _objectSpread({}, todo, {\n                        complete: !todo.complete\n                      }) : task;\n                    });\n                    store.writeQuery({\n                      query: TodosQuery,\n                      data: data\n                    });\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.removeTodo = function (todo) {};\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$data = this.props.data,\n          loading = _this$props$data.loading,\n          todos = _this$props$data.todos;\n      return React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          margin: \"auto\",\n          width: \"400px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        elavation: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, !loading && React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, todos.map(function (todo) {\n        return React.createElement(ListItem, {\n          key: todo.id,\n          onClick: function onClick() {\n            return _this2.updateTodo(todo);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: todo.complete,\n          tabIndex: -1,\n          disableRipple: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: todo.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          onClick: function onClick() {\n            return _this2.removeTodo(todo);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }))));\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default compose(graphql(TodosQuery), graphql(UpdateMutation, {\n  name: \"updateTodo\"\n}))(App);","map":{"version":3,"sources":["/Users/sumaudupa/Desktop/office-data/sample_websites/mern-todo/client/src/App.js"],"names":["React","Component","gql","graphql","compose","Paper","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CloseIcon","TodosQuery","UpdateMutation","RemoveMutation","App","updateTodo","todo","props","variables","id","complete","update","store","data","readQuery","query","todos","map","task","writeQuery","removeTodo","loading","display","margin","width","text","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from \"react-apollo\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst TodosQuery = gql`\n  {\n    todos {\n      id\n      text\n      complete\n    }\n  }\n`;\n\nconst UpdateMutation = gql`\n  mutation($id: ID!, $complete: Boolean!) {\n    updateTodo(id: $id, complete: $complete)\n  }\n`;\n\nconst RemoveMutation = gql`\n  mutation($id: ID)\n`;\n\nclass App extends Component {\n\n updateTodo = async todo =>  {\n    await this.props.updateTodo({\n      variables: {\n        id: todo.id,\n        complete: !todo.complete\n      },\n      update: store => {\n        //Read data from cache to query\n        const data = store.readQuery({ query: TodosQuery });\n        data.todos = data.todos.map(\n          task => (task.id === todo.id) ? {...todo, complete: !todo.complete} : task\n        );\n\n        store.writeQuery({ query: TodosQuery, data})\n      }\n    })\n  };\n\n\n  removeTodo = (todo) => {\n\n  }\n\n  render() {\n    const {\n      data: { loading, todos }\n    } = this.props;\n    return (\n      <div style={{ display: \"flex\" }}>\n        <div style={{ margin: \"auto\", width: \"400px\" }}>\n          <Paper elavation={1}>\n            {!loading && \n              <List>\n              {todos.map(todo => (\n                <ListItem key={todo.id} onClick={() => this.updateTodo(todo)}>\n                  <Checkbox\n                    checked={todo.complete}\n                    tabIndex={-1}\n                    disableRipple\n                  />\n                  <ListItemText primary={todo.text} />\n                  <ListItemSecondaryAction>\n                    <IconButton onClick={() => this.removeTodo(todo)}>\n                      <CloseIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n            }\n          </Paper>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  graphql(TodosQuery), \n  graphql(UpdateMutation, {name: \"updateTodo\"})\n)(App);\n"]},"metadata":{},"sourceType":"module"}